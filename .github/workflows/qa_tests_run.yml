name: Running QA Tests For Checking Password Generator Feature

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the tests on'
        required: true
        default: 'master'
      marker:
        description: 'Tests run with marker'
        required: true
        default: 'password_generator'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
          pipenv run playwright install-deps  # Installs required browser dependencies
          pipenv run playwright install  # Installs Playwright browsers
          pipenv run pip install allure-pytest  # Install Allure for pytest

      - name: Download and Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.21.0/allure-2.21.0.tgz
          tar -zxvf allure-2.21.0.tgz
          sudo mv allure-2.21.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Run Playwright tests with selected marker
        run: |
          pipenv run pytest -m "${{ github.event.inputs.marker }}" --alluredir=allure-results
        env:
          PYTHONPATH: .

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Generate and Compress Allure Report
        if: always()
        run: |
          allure generate allure-results --clean -o allure-report
          zip -r allure-report.zip allure-report

      - name: Deploy Allure Report to GitHub Pages
        if: always()
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git fetch origin
          git switch -c gh-pages || git checkout gh-pages
          unzip allure-report.zip -d ./staging
          cp -r staging/allure-report/* .
          git add .
          git commit -m "Deploy Allure report to GitHub Pages"
          git push -u origin gh-pages --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          